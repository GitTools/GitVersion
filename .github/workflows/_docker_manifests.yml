on:
  workflow_call:
    inputs:
      dockerDistros:
        required: true
        type: string
      dotnetVersions:
        required: true
        type: string
env:
  DOTNET_INSTALL_DIR: "./.dotnet"
  DOTNET_ROLL_FORWARD: "Major"

jobs:
  manifest:
    name: ${{ matrix.dockerDistro }} - net${{ matrix.dotnetVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dockerDistro: ${{ fromJson(inputs.dockerDistros) }}
        dotnetVersion: ${{ fromJson(inputs.dotnetVersions) }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    -
      name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    -
      name: Restore State
      uses: ./.github/actions/cache-restore
    -
      name: Set up Docker
      uses: crazy-max/ghaction-setup-docker@v3
      with:
        daemon-config: '{ "features": { "containerd-snapshotter": true } }'
    -
      name: Setup QEMU
      uses: docker/setup-qemu-action@v3
    -
      name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: 'latest'
        driver-opts: 'image=moby/buildkit:buildx-stable-1'
        install: true      
    -
      name: Docker Manifests
      if: success() && github.event_name != 'pull_request' && github.repository_owner == 'GitTools' && github.ref_name == 'main'
      uses: ./.github/actions/docker-manifests
      with:
        dockerDistro: ${{ matrix.dockerDistro }}
        dotnetVersion: ${{ matrix.dotnetVersion }}
        docker_registry_username: ${{ secrets.DOCKER_USERNAME }}
        docker_registry_password: ${{ secrets.DOCKER_PASSWORD }}
        github_registry_username: ${{ github.repository_owner }}
        github_registry_password: ${{ secrets.DOCKER_GITHUB_TOKEN }}
