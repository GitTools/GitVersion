on:
  workflow_call:
    inputs:
      runner:
        required: true
        type: string
      arch:
        required: true
        type: string

env:
  DOTNET_INSTALL_DIR: "./.dotnet"
  DOTNET_ROLL_FORWARD: "Major"

jobs:
  docker:
    name: ${{ matrix.distro }} - net${{ matrix.targetFramework }}
    runs-on: ${{ inputs.runner }}
    strategy:
      fail-fast: false
      matrix:
        distro:
          - alpine.3.17
          - alpine.3.18
          - centos.stream.8
          - debian.11
          - fedora.37
          - ubuntu.20.04
          - ubuntu.22.04
          - ubuntu.24.04
        targetFramework: [ '6.0', '8.0' ]

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
      with:
        egress-policy: audit

    -
      name: Checkout
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        fetch-depth: 0
    -
      name: Restore State
      uses: ./.github/actions/artifacts-restore
    -
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      name: Download nuget packages
      with:
        name: nuget
        path: ${{ github.workspace }}/artifacts/packages/nuget
    -
      name: Set up Docker
      uses: crazy-max/ghaction-setup-docker@78318f8be53384b971671f27d81f5e72526c102d # v3.3.0
      with:
        daemon-config: '{ "features": { "containerd-snapshotter": true } }'        
    -
      name: Setup QEMU
      uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0
    -
      name: Setup Docker Buildx
      uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1
      with:
        version: 'latest'
        driver-opts: 'image=moby/buildkit:buildx-stable-1'
        install: true    
    -
      name: Docker Test
      if: success() && github.event_name == 'pull_request' || github.repository_owner != 'GitTools'
      uses: ./.github/actions/docker-test
      with:
        arch: ${{ inputs.arch }}
        distro: ${{ matrix.distro }}
        targetFramework: ${{ matrix.targetFramework }}
    -
      name: Docker Publish
      if: success() && github.event_name != 'pull_request' && github.repository_owner == 'GitTools' && github.ref_name == 'main'
      uses: ./.github/actions/docker-publish
      with:
        arch: ${{ inputs.arch }}
        distro: ${{ matrix.distro }}
        targetFramework: ${{ matrix.targetFramework }}
        docker_registry_username: ${{ secrets.DOCKER_USERNAME }}
        docker_registry_password: ${{ secrets.DOCKER_PASSWORD }}
        github_registry_username: ${{ github.repository_owner }}
        github_registry_password: ${{ secrets.DOCKER_GITHUB_TOKEN }}
    -
      name: DockerHub Publish Readme
      if: success() && github.event_name != 'pull_request' && github.repository_owner == 'GitTools' && github.ref_name == 'main'
      shell: pwsh
      run: dotnet run/docker.dll --target=DockerHubReadmePublish
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

