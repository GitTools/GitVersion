on:
  workflow_call:
    outputs:
      dockerDistros:
        description: 'List of Docker distros'
        value: ${{ jobs.set_matrix.outputs.dockerDistros }}
      dotnetVersions:
        description: 'List of .NET versions'
        value: ${{ jobs.set_matrix.outputs.dotnetVersions }}
jobs:
  prepare:
    name: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-15]

    runs-on: ${{ matrix.os }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    -
      name: Checkout
      uses: actions/checkout@v4
    -
      name: Cache cake frosting
      id: cache-cake
      uses: actions/cache@v4
      with:
        path: run
        key: run-${{ runner.os }}-${{ hashFiles('./build/**') }}
    - name: Use cached tools
      id: cache-tools
      uses: actions/cache@v4
      with:
        path: tools
        key: tools-${{ runner.os }}-${{ hashFiles('./build/**') }}
    -
      name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: global.json
    -
      name: '[Build]'
      if: steps.cache-cake.outputs.cache-hit != 'true'
      run: dotnet build build/CI.sln --configuration=Release
    -
      name: '[Prepare]'
      shell: pwsh
      run: dotnet run/build.dll --target=BuildPrepare
  set_matrix:
    needs: [ prepare ]
    name: Set Matrix
    runs-on: ubuntu-latest
    outputs:
      dockerDistros: ${{ steps.set_matrix.outputs.dockerDistros }}
      dotnetVersions: ${{ steps.set_matrix.outputs.dotnetVersions }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Restore State
        uses: ./.github/actions/cache-restore
      -
        name: '[Matrix]'
        id: set_matrix
        shell: pwsh
        run: dotnet run/config.dll --target=SetMatrix