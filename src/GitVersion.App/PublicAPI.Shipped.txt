#nullable enable
GitVersion.ArgumentParser
GitVersion.ArgumentParser.ArgumentParser(GitVersion.IEnvironment! environment, GitVersion.BuildAgents.ICurrentBuildAgent! buildAgent, GitVersion.Logging.IConsole! console, GitVersion.IGlobbingResolver! globbingResolver) -> void
GitVersion.ArgumentParser.ParseArguments(string! commandLineArguments) -> GitVersion.Arguments!
GitVersion.ArgumentParser.ParseArguments(string![]! commandLineArguments) -> GitVersion.Arguments!
GitVersion.Arguments
GitVersion.Arguments.Arguments() -> void
GitVersion.Arguments.Authentication -> GitVersion.AuthenticationInfo!
GitVersion.Arguments.ClonePath -> string?
GitVersion.Arguments.CommitId -> string?
GitVersion.Arguments.ConfigFile -> string?
GitVersion.Arguments.Diag -> bool
GitVersion.Arguments.EnsureAssemblyInfo -> bool
GitVersion.Arguments.Init -> bool
GitVersion.Arguments.IsHelp -> bool
GitVersion.Arguments.IsVersion -> bool
GitVersion.Arguments.LogFilePath -> string?
GitVersion.Arguments.NoCache -> bool
GitVersion.Arguments.NoFetch -> bool
GitVersion.Arguments.NoNormalize -> bool
GitVersion.Arguments.Output -> System.Collections.Generic.ISet<GitVersion.OutputType>!
GitVersion.Arguments.OutputFile -> string?
GitVersion.Arguments.OverrideConfig -> GitVersion.Configuration.GitVersionConfiguration?
GitVersion.Arguments.ShowConfig -> bool
GitVersion.Arguments.ShowVariable -> string?
GitVersion.Arguments.TargetBranch -> string?
GitVersion.Arguments.TargetPath -> string?
GitVersion.Arguments.TargetUrl -> string?
GitVersion.Arguments.ToOptions() -> GitVersion.GitVersionOptions!
GitVersion.Arguments.UpdateAssemblyInfo -> bool
GitVersion.Arguments.UpdateAssemblyInfoFileName -> System.Collections.Generic.ISet<string!>!
GitVersion.Arguments.UpdateProjectFiles -> bool
GitVersion.Arguments.UpdateWixVersionFile -> bool
GitVersion.Arguments.Verbosity -> GitVersion.Logging.Verbosity
GitVersion.GitVersionAppModule
GitVersion.GitVersionAppModule.GitVersionAppModule() -> void
GitVersion.GitVersionAppModule.RegisterTypes(Microsoft.Extensions.DependencyInjection.IServiceCollection! services) -> void
GitVersion.GitVersionExecutor
GitVersion.GitVersionExecutor.Execute(GitVersion.GitVersionOptions! gitVersionOptions) -> int
GitVersion.GitVersionExecutor.GitVersionExecutor(GitVersion.Logging.ILog! log, GitVersion.Logging.IConsole! console, GitVersion.Configuration.IConfigurationFileLocator! configFileLocator, GitVersion.Configuration.IConfigurationProvider! configurationProvider, GitVersion.IGitVersionCalculateTool! gitVersionCalculateTool, GitVersion.IGitVersionOutputTool! gitVersionOutputTool, GitVersion.IVersionWriter! versionWriter, GitVersion.IHelpWriter! helpWriter, GitVersion.IGitRepositoryInfo! repositoryInfo) -> void
GitVersion.GlobbingResolver
GitVersion.GlobbingResolver.GlobbingResolver() -> void
GitVersion.GlobbingResolver.Resolve(string! workingDirectory, string! pattern) -> System.Collections.Generic.IEnumerable<string!>!
GitVersion.HelpWriter
GitVersion.HelpWriter.HelpWriter(GitVersion.IVersionWriter! versionWriter, GitVersion.Logging.IConsole! console) -> void
GitVersion.HelpWriter.Write() -> void
GitVersion.HelpWriter.WriteTo(System.Action<string!>! writeAction) -> void
GitVersion.IArgumentParser
GitVersion.IArgumentParser.ParseArguments(string! commandLineArguments) -> GitVersion.Arguments!
GitVersion.IArgumentParser.ParseArguments(string![]! commandLineArguments) -> GitVersion.Arguments!
GitVersion.IGitVersionExecutor
GitVersion.IGitVersionExecutor.Execute(GitVersion.GitVersionOptions! gitVersionOptions) -> int
GitVersion.IGlobbingResolver
GitVersion.IGlobbingResolver.Resolve(string! workingDirectory, string! pattern) -> System.Collections.Generic.IEnumerable<string!>!
GitVersion.IHelpWriter
GitVersion.IHelpWriter.Write() -> void
GitVersion.IHelpWriter.WriteTo(System.Action<string!>! writeAction) -> void
GitVersion.IVersionWriter
GitVersion.IVersionWriter.Write(System.Reflection.Assembly! assembly) -> void
GitVersion.IVersionWriter.WriteTo(System.Reflection.Assembly! assembly, System.Action<string?>! writeAction) -> void
GitVersion.QuotedStringHelpers
GitVersion.VersionWriter
GitVersion.VersionWriter.VersionWriter(GitVersion.Logging.IConsole! console) -> void
GitVersion.VersionWriter.Write(System.Reflection.Assembly! assembly) -> void
GitVersion.VersionWriter.WriteTo(System.Reflection.Assembly! assembly, System.Action<string?>! writeAction) -> void
static GitVersion.QuotedStringHelpers.SplitUnquoted(string? input, char splitChar) -> string![]!
static GitVersion.QuotedStringHelpers.UnquoteText(string! input) -> string!
virtual GitVersion.GlobbingResolver.GetDirectoryInfoWrapper(string! workingDirectory) -> Microsoft.Extensions.FileSystemGlobbing.Abstractions.DirectoryInfoBase!
