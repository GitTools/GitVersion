using System;
using System.Collections.Generic;
using System.Linq;
using GitVersion;

public class VisualBasicAssemblyInfoBuilder : AssemblyInfoBuilder
{
    public override string AssemblyInfoExtension { get { return "vb"; } }

    public override string GetAssemblyInfoText(VersionVariables vars, string rootNamespace)
    {
        var v = vars.ToList();

        // TODO: Consolidate this with GitVersion.VersionAssemblyInfoResources.AssemblyVersionInfoTemplates. @asbjornu
        var assemblyInfo = string.Format(
@"'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     GitVersion
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Reflection

<Assembly: AssemblyVersion(""{0}"")>
<Assembly: AssemblyFileVersion(""{1}"")>
<Assembly: AssemblyInformationalVersion(""{2}"")>

<Global.System.Runtime.CompilerServices.CompilerGenerated()> _
NotInheritable Class GitVersionInformation
    Private Sub New()
    End Sub
{3}
End Class
",
        vars.AssemblySemVer,
        vars.AssemblySemFileVer,
        vars.InformationalVersion,
        GenerateStaticVariableMembers(v));

        return assemblyInfo;
    }

    static string GenerateStaticVariableMembers(IList<KeyValuePair<string, string>> vars)
    {
        return GenerateMembers(vars, "        Public Shared {0} As String = \"{1}\"");
    }


    static string GenerateMembers(IList<KeyValuePair<string, string>> vars, string memberFormat)
    {
        return string.Join(Environment.NewLine, vars.Select(v => string.Format(memberFormat, v.Key, v.Value)));
    }
}