using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text.RegularExpressions;
using GitVersion;
using Microsoft.Build.Framework;

public static class InvalidFileChecker
{
    public static void CheckForInvalidFiles(IEnumerable<ITaskItem> compileFiles, string projectFile)
    {
        foreach (var compileFile in GetInvalidFiles(compileFiles, projectFile))
        {
            throw new WarningException("File contains assembly version attributes with conflict with the attributes generated by GitVersion " + compileFile);
        }
    }

    static bool FileContainsVersionAttribute(string compileFile, string projectFile)
    {
        var combine = Path.Combine(Path.GetDirectoryName(projectFile), compileFile);
        var allText = File.ReadAllText(combine);

        var blockComments = @"/\*(.*?)\*/";
        var lineComments = @"//(.*?)\r?\n";
        var strings = @"""((\\[^\n]|[^""\n])*)""";
        var verbatimStrings = @"@(""[^""]*"")+";

        var noCommentsOrStrings = Regex.Replace(allText,
            blockComments + "|" + lineComments + "|" + strings + "|" + verbatimStrings,
            me =>
            {
                if (me.Value.StartsWith("//"))
                    return Environment.NewLine;

                return "";
            },
            RegexOptions.Singleline);

        return Regex.IsMatch(noCommentsOrStrings, @"(?x) # IgnorePatternWhitespace

\[\s*assembly\s*:\s*                    # The [assembly: part

(System\s*\.\s*Reflection\s*\.\s*)?     # The System.Reflection. part (optional)

Assembly(File|Informational)?Version    # The attribute AssemblyVersion, AssemblyFileVersion, or AssemblyInformationalVersion

\s*\(\s*\)\s*\]                         # End brackets ()]");
    }

    static IEnumerable<string> GetInvalidFiles(IEnumerable<ITaskItem> compileFiles, string projectFile)
    {
        return compileFiles.Select(x => x.ItemSpec)
            .Where(compileFile => compileFile.Contains("AssemblyInfo"))
            .Where(s => FileContainsVersionAttribute(s, projectFile));
    }
}